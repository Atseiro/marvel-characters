name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  pytest_and_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          # Fetch all history for all branches and tags
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Git tag from version.txt
        run: |
          echo "VERSION=$(cat version.txt)"
          git tag $VERSION

      - name: Install uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: configure private repo
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global url."https://x-access-token:$GITHUB_TOKEN@github.com/end-to-end-mlops-databricks-3".insteadOf "https://github.com/end-to-end-mlops-databricks-3"

      - name: Install the dependencies
        run: |
          uv sync --extra test

      - name: Run pre-commit checks
        run: |
          uv run pre-commit run --all-files

      - name: run pytest
        run: |
          uv run pytest -m "not ci_exclude"
  integration_testing:
    needs: pytest_and_checks
    runs-on: ubuntu-latest
    environment: dev
    # No special permissions needed for CI
    env:
      DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
      DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
      DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Install Databricks CLI
        uses: databricks/setup-cli@49580195afe1ccb06d195764a1d0ae9fabfe2edd #v0.246.0
        with:
          version: 0.246.0

      - name: Configure Databricks CLI
        run: |
          mkdir -p ~/.databricks
          cat > ~/.databrickscfg << EOF
          [DEFAULT]
          host = ${{ vars.DATABRICKS_HOST }}
          client_id = ${{ secrets.DATABRICKS_CLIENT_ID }}
          client_secret = ${{ secrets.DATABRICKS_CLIENT_SECRET }}
          EOF

      - name: Install uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: Deploy to Databricks
        env:
          DATABRICKS_BUNDLE_ENV: test
        run: |
            full_repo="${{ github.repository }}"
            repo_name="${full_repo##*/}"
            org_name="${full_repo%%/*}"
            databricks bundle deploy --var="git_sha=${{ github.sha }}" --var="repo=${repo_name}" --var="org=${org_name}"
            databricks bundle run deployment --no-wait
